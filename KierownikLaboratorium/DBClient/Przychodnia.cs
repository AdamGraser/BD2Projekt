#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.18449
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Przychodnia
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class Przychodnia : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdministrator(Administrator instance);
    partial void UpdateAdministrator(Administrator instance);
    partial void DeleteAdministrator(Administrator instance);
    partial void InsertBadanie(Badanie instance);
    partial void UpdateBadanie(Badanie instance);
    partial void DeleteBadanie(Badanie instance);
    partial void InsertLaborant(Laborant instance);
    partial void UpdateLaborant(Laborant instance);
    partial void DeleteLaborant(Laborant instance);
    partial void InsertLekarz(Lekarz instance);
    partial void UpdateLekarz(Lekarz instance);
    partial void DeleteLekarz(Lekarz instance);
    partial void InsertPacjent(Pacjent instance);
    partial void UpdatePacjent(Pacjent instance);
    partial void DeletePacjent(Pacjent instance);
    partial void InsertRejestratorka(Rejestratorka instance);
    partial void UpdateRejestratorka(Rejestratorka instance);
    partial void DeleteRejestratorka(Rejestratorka instance);
    partial void InsertSl_badan(Sl_badan instance);
    partial void UpdateSl_badan(Sl_badan instance);
    partial void DeleteSl_badan(Sl_badan instance);
    partial void InsertSl_specjalizacji(Sl_specjalizacji instance);
    partial void UpdateSl_specjalizacji(Sl_specjalizacji instance);
    partial void DeleteSl_specjalizacji(Sl_specjalizacji instance);
    partial void InsertWizyta(Wizyta instance);
    partial void UpdateWizyta(Wizyta instance);
    partial void DeleteWizyta(Wizyta instance);
    #endregion
		
		public Przychodnia(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Przychodnia(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrator> Administrators
		{
			get
			{
				return this.GetTable<Administrator>();
			}
		}
		
		public System.Data.Linq.Table<Badanie> Badanies
		{
			get
			{
				return this.GetTable<Badanie>();
			}
		}
		
		public System.Data.Linq.Table<Laborant> Laborants
		{
			get
			{
				return this.GetTable<Laborant>();
			}
		}
		
		public System.Data.Linq.Table<Lekarz> Lekarzs
		{
			get
			{
				return this.GetTable<Lekarz>();
			}
		}
		
		public System.Data.Linq.Table<Pacjent> Pacjents
		{
			get
			{
				return this.GetTable<Pacjent>();
			}
		}
		
		public System.Data.Linq.Table<Rejestratorka> Rejestratorkas
		{
			get
			{
				return this.GetTable<Rejestratorka>();
			}
		}
		
		public System.Data.Linq.Table<Sl_badan> Sl_badans
		{
			get
			{
				return this.GetTable<Sl_badan>();
			}
		}
		
		public System.Data.Linq.Table<Sl_specjalizacji> Sl_specjalizacjis
		{
			get
			{
				return this.GetTable<Sl_specjalizacji>();
			}
		}
		
		public System.Data.Linq.Table<Wizyta> Wizytas
		{
			get
			{
				return this.GetTable<Wizyta>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrator")]
	public partial class Administrator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id_adm;
		
		private string _Nazwisko;
		
		private string _Imie;
		
		private string _Login;
		
		private string _Haslo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_admChanging(byte value);
    partial void OnId_admChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    #endregion
		
		public Administrator()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_adm", Storage="_Id_adm", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte Id_adm
		{
			get
			{
				return this._Id_adm;
			}
			set
			{
				if ((this._Id_adm != value))
				{
					this.OnId_admChanging(value);
					this.SendPropertyChanging();
					this._Id_adm = value;
					this.SendPropertyChanged("Id_adm");
					this.OnId_admChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwisko", Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imie", Storage="_Imie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="login", Storage="_Login", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="haslo", Storage="_Haslo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Badanie")]
	public partial class Badanie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id_bad;
		
		private int _Id_wiz;
		
		private System.DateTime _Data_zle;
		
		private System.Nullable<System.DateTime> _Data_wyk_bad;
		
		private string _Opis;
		
		private string _Wynik;
		
		private System.Nullable<bool> _Zatw;
		
		private string _Uwagi;
		
		private System.Nullable<short> _Kod;
		
		private System.Nullable<byte> _Id_lab;
		
		private EntityRef<Laborant> _Laborant;
		
		private EntityRef<Sl_badan> _Sl_badan;
		
		private EntityRef<Wizyta> _Wizyta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_badChanging(byte value);
    partial void OnId_badChanged();
    partial void OnId_wizChanging(int value);
    partial void OnId_wizChanged();
    partial void OnData_zleChanging(System.DateTime value);
    partial void OnData_zleChanged();
    partial void OnData_wyk_badChanging(System.Nullable<System.DateTime> value);
    partial void OnData_wyk_badChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnWynikChanging(string value);
    partial void OnWynikChanged();
    partial void OnZatwChanging(System.Nullable<bool> value);
    partial void OnZatwChanged();
    partial void OnUwagiChanging(string value);
    partial void OnUwagiChanged();
    partial void OnKodChanging(System.Nullable<short> value);
    partial void OnKodChanged();
    partial void OnId_labChanging(System.Nullable<byte> value);
    partial void OnId_labChanged();
    #endregion
		
		public Badanie()
		{
			this._Laborant = default(EntityRef<Laborant>);
			this._Sl_badan = default(EntityRef<Sl_badan>);
			this._Wizyta = default(EntityRef<Wizyta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_bad", Storage="_Id_bad", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte Id_bad
		{
			get
			{
				return this._Id_bad;
			}
			set
			{
				if ((this._Id_bad != value))
				{
					this.OnId_badChanging(value);
					this.SendPropertyChanging();
					this._Id_bad = value;
					this.SendPropertyChanged("Id_bad");
					this.OnId_badChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_wiz", Storage="_Id_wiz", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id_wiz
		{
			get
			{
				return this._Id_wiz;
			}
			set
			{
				if ((this._Id_wiz != value))
				{
					this.OnId_wizChanging(value);
					this.SendPropertyChanging();
					this._Id_wiz = value;
					this.SendPropertyChanged("Id_wiz");
					this.OnId_wizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="data_zle", Storage="_Data_zle", DbType="DateTime NOT NULL")]
		public System.DateTime Data_zle
		{
			get
			{
				return this._Data_zle;
			}
			set
			{
				if ((this._Data_zle != value))
				{
					this.OnData_zleChanging(value);
					this.SendPropertyChanging();
					this._Data_zle = value;
					this.SendPropertyChanged("Data_zle");
					this.OnData_zleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="data_wyk_bad", Storage="_Data_wyk_bad", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_wyk_bad
		{
			get
			{
				return this._Data_wyk_bad;
			}
			set
			{
				if ((this._Data_wyk_bad != value))
				{
					this.OnData_wyk_badChanging(value);
					this.SendPropertyChanging();
					this._Data_wyk_bad = value;
					this.SendPropertyChanged("Data_wyk_bad");
					this.OnData_wyk_badChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="opis", Storage="_Opis", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wynik", Storage="_Wynik", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Wynik
		{
			get
			{
				return this._Wynik;
			}
			set
			{
				if ((this._Wynik != value))
				{
					this.OnWynikChanging(value);
					this.SendPropertyChanging();
					this._Wynik = value;
					this.SendPropertyChanged("Wynik");
					this.OnWynikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="zatw", Storage="_Zatw", DbType="Bit")]
		public System.Nullable<bool> Zatw
		{
			get
			{
				return this._Zatw;
			}
			set
			{
				if ((this._Zatw != value))
				{
					this.OnZatwChanging(value);
					this.SendPropertyChanging();
					this._Zatw = value;
					this.SendPropertyChanged("Zatw");
					this.OnZatwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="uwagi", Storage="_Uwagi", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Uwagi
		{
			get
			{
				return this._Uwagi;
			}
			set
			{
				if ((this._Uwagi != value))
				{
					this.OnUwagiChanging(value);
					this.SendPropertyChanging();
					this._Uwagi = value;
					this.SendPropertyChanged("Uwagi");
					this.OnUwagiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kod", Storage="_Kod", DbType="SmallInt")]
		public System.Nullable<short> Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_lab", Storage="_Id_lab", DbType="TinyInt")]
		public System.Nullable<byte> Id_lab
		{
			get
			{
				return this._Id_lab;
			}
			set
			{
				if ((this._Id_lab != value))
				{
					this.OnId_labChanging(value);
					this.SendPropertyChanging();
					this._Id_lab = value;
					this.SendPropertyChanged("Id_lab");
					this.OnId_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Badanie_Laborant", Storage="_Laborant", ThisKey="Id_lab", OtherKey="Id_lab", IsForeignKey=true)]
		public Laborant Laborant
		{
			get
			{
				return this._Laborant.Entity;
			}
			set
			{
				Laborant previousValue = this._Laborant.Entity;
				if (((previousValue != value) 
							|| (this._Laborant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Laborant.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Laborant.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._Id_lab = value.Id_lab;
					}
					else
					{
						this._Id_lab = default(Nullable<byte>);
					}
					this.SendPropertyChanged("Laborant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Badanie_Sl_badan", Storage="_Sl_badan", ThisKey="Kod", OtherKey="Kod", IsForeignKey=true)]
		public Sl_badan Sl_badan
		{
			get
			{
				return this._Sl_badan.Entity;
			}
			set
			{
				Sl_badan previousValue = this._Sl_badan.Entity;
				if (((previousValue != value) 
							|| (this._Sl_badan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sl_badan.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Sl_badan.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._Kod = value.Kod;
					}
					else
					{
						this._Kod = default(Nullable<short>);
					}
					this.SendPropertyChanged("Sl_badan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Badanie_Wizyta", Storage="_Wizyta", ThisKey="Id_wiz", OtherKey="Id_wiz", IsForeignKey=true)]
		public Wizyta Wizyta
		{
			get
			{
				return this._Wizyta.Entity;
			}
			set
			{
				Wizyta previousValue = this._Wizyta.Entity;
				if (((previousValue != value) 
							|| (this._Wizyta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wizyta.Entity = null;
						previousValue.Badanies.Remove(this);
					}
					this._Wizyta.Entity = value;
					if ((value != null))
					{
						value.Badanies.Add(this);
						this._Id_wiz = value.Id_wiz;
					}
					else
					{
						this._Id_wiz = default(int);
					}
					this.SendPropertyChanged("Wizyta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Laborant")]
	public partial class Laborant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id_lab;
		
		private string _Nazwisko;
		
		private string _Imie;
		
		private string _Login;
		
		private string _Haslo;
		
		private bool _Kier;
		
		private System.DateTime _Aktywny;
		
		private System.Nullable<System.DateTime> _Wygasa;
		
		private EntitySet<Badanie> _Badanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_labChanging(byte value);
    partial void OnId_labChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    partial void OnKierChanging(bool value);
    partial void OnKierChanged();
    partial void OnAktywnyChanging(System.DateTime value);
    partial void OnAktywnyChanged();
    partial void OnWygasaChanging(System.Nullable<System.DateTime> value);
    partial void OnWygasaChanged();
    #endregion
		
		public Laborant()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_lab", Storage="_Id_lab", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte Id_lab
		{
			get
			{
				return this._Id_lab;
			}
			set
			{
				if ((this._Id_lab != value))
				{
					this.OnId_labChanging(value);
					this.SendPropertyChanging();
					this._Id_lab = value;
					this.SendPropertyChanged("Id_lab");
					this.OnId_labChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwisko", Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imie", Storage="_Imie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="login", Storage="_Login", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="haslo", Storage="_Haslo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kier", Storage="_Kier", DbType="Bit NOT NULL")]
		public bool Kier
		{
			get
			{
				return this._Kier;
			}
			set
			{
				if ((this._Kier != value))
				{
					this.OnKierChanging(value);
					this.SendPropertyChanging();
					this._Kier = value;
					this.SendPropertyChanged("Kier");
					this.OnKierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="aktywny", Storage="_Aktywny", DbType="DateTime NOT NULL")]
		public System.DateTime Aktywny
		{
			get
			{
				return this._Aktywny;
			}
			set
			{
				if ((this._Aktywny != value))
				{
					this.OnAktywnyChanging(value);
					this.SendPropertyChanging();
					this._Aktywny = value;
					this.SendPropertyChanged("Aktywny");
					this.OnAktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wygasa", Storage="_Wygasa", DbType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa
		{
			get
			{
				return this._Wygasa;
			}
			set
			{
				if ((this._Wygasa != value))
				{
					this.OnWygasaChanging(value);
					this.SendPropertyChanging();
					this._Wygasa = value;
					this.SendPropertyChanged("Wygasa");
					this.OnWygasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Badanie_Laborant", Storage="_Badanies", ThisKey="Id_lab", OtherKey="Id_lab", DeleteRule="NO ACTION")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Laborant = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Laborant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lekarz")]
	public partial class Lekarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id_lek;
		
		private string _Nazwisko;
		
		private string _Imie;
		
		private string _Login;
		
		private string _Haslo;
		
		private short _Kod_spec;
		
		private System.DateTime _Aktywny;
		
		private System.Nullable<System.DateTime> _Wygasa;
		
		private EntityRef<Sl_specjalizacji> _Sl_specjalizacji;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_lekChanging(byte value);
    partial void OnId_lekChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    partial void OnKod_specChanging(short value);
    partial void OnKod_specChanged();
    partial void OnAktywnyChanging(System.DateTime value);
    partial void OnAktywnyChanged();
    partial void OnWygasaChanging(System.Nullable<System.DateTime> value);
    partial void OnWygasaChanged();
    #endregion
		
		public Lekarz()
		{
			this._Sl_specjalizacji = default(EntityRef<Sl_specjalizacji>);
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_lek", Storage="_Id_lek", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte Id_lek
		{
			get
			{
				return this._Id_lek;
			}
			set
			{
				if ((this._Id_lek != value))
				{
					this.OnId_lekChanging(value);
					this.SendPropertyChanging();
					this._Id_lek = value;
					this.SendPropertyChanged("Id_lek");
					this.OnId_lekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwisko", Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imie", Storage="_Imie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="login", Storage="_Login", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="haslo", Storage="_Haslo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kod_spec", Storage="_Kod_spec", DbType="SmallInt NOT NULL")]
		public short Kod_spec
		{
			get
			{
				return this._Kod_spec;
			}
			set
			{
				if ((this._Kod_spec != value))
				{
					this.OnKod_specChanging(value);
					this.SendPropertyChanging();
					this._Kod_spec = value;
					this.SendPropertyChanged("Kod_spec");
					this.OnKod_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="aktywny", Storage="_Aktywny", DbType="DateTime NOT NULL")]
		public System.DateTime Aktywny
		{
			get
			{
				return this._Aktywny;
			}
			set
			{
				if ((this._Aktywny != value))
				{
					this.OnAktywnyChanging(value);
					this.SendPropertyChanging();
					this._Aktywny = value;
					this.SendPropertyChanged("Aktywny");
					this.OnAktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wygasa", Storage="_Wygasa", DbType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa
		{
			get
			{
				return this._Wygasa;
			}
			set
			{
				if ((this._Wygasa != value))
				{
					this.OnWygasaChanging(value);
					this.SendPropertyChanging();
					this._Wygasa = value;
					this.SendPropertyChanged("Wygasa");
					this.OnWygasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lekarz_Sl_specjalizacji", Storage="_Sl_specjalizacji", ThisKey="Kod_spec", OtherKey="Kod_spec", IsForeignKey=true)]
		public Sl_specjalizacji Sl_specjalizacji
		{
			get
			{
				return this._Sl_specjalizacji.Entity;
			}
			set
			{
				Sl_specjalizacji previousValue = this._Sl_specjalizacji.Entity;
				if (((previousValue != value) 
							|| (this._Sl_specjalizacji.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sl_specjalizacji.Entity = null;
						previousValue.Lekarzs.Remove(this);
					}
					this._Sl_specjalizacji.Entity = value;
					if ((value != null))
					{
						value.Lekarzs.Add(this);
						this._Kod_spec = value.Kod_spec;
					}
					else
					{
						this._Kod_spec = default(short);
					}
					this.SendPropertyChanged("Sl_specjalizacji");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Wizyta_Lekarz", Storage="_Wizytas", ThisKey="Id_lek", OtherKey="Id_lek", DeleteRule="NO ACTION")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Lekarz = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Lekarz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacjent")]
	public partial class Pacjent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_pac;
		
		private string _Nazwisko;
		
		private string _Imie;
		
		private long _Pesel;
		
		private System.DateTime _Data_ur;
		
		private string _Ulica;
		
		private string _Nr_bud;
		
		private string _Nr_miesz;
		
		private string _Kod_pocz;
		
		private string _Miasto;
		
		private bool _Plec;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_pacChanging(int value);
    partial void OnId_pacChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnPeselChanging(long value);
    partial void OnPeselChanged();
    partial void OnData_urChanging(System.DateTime value);
    partial void OnData_urChanged();
    partial void OnUlicaChanging(string value);
    partial void OnUlicaChanged();
    partial void OnNr_budChanging(string value);
    partial void OnNr_budChanged();
    partial void OnNr_mieszChanging(string value);
    partial void OnNr_mieszChanged();
    partial void OnKod_poczChanging(string value);
    partial void OnKod_poczChanged();
    partial void OnMiastoChanging(string value);
    partial void OnMiastoChanged();
    partial void OnPlecChanging(bool value);
    partial void OnPlecChanged();
    #endregion
		
		public Pacjent()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_pac", Storage="_Id_pac", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_pac
		{
			get
			{
				return this._Id_pac;
			}
			set
			{
				if ((this._Id_pac != value))
				{
					this.OnId_pacChanging(value);
					this.SendPropertyChanging();
					this._Id_pac = value;
					this.SendPropertyChanged("Id_pac");
					this.OnId_pacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwisko", Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imie", Storage="_Imie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pesel", Storage="_Pesel", DbType="BigInt NOT NULL")]
		public long Pesel
		{
			get
			{
				return this._Pesel;
			}
			set
			{
				if ((this._Pesel != value))
				{
					this.OnPeselChanging(value);
					this.SendPropertyChanging();
					this._Pesel = value;
					this.SendPropertyChanged("Pesel");
					this.OnPeselChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="data_ur", Storage="_Data_ur", DbType="Date NOT NULL")]
		public System.DateTime Data_ur
		{
			get
			{
				return this._Data_ur;
			}
			set
			{
				if ((this._Data_ur != value))
				{
					this.OnData_urChanging(value);
					this.SendPropertyChanging();
					this._Data_ur = value;
					this.SendPropertyChanged("Data_ur");
					this.OnData_urChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ulica", Storage="_Ulica", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Ulica
		{
			get
			{
				return this._Ulica;
			}
			set
			{
				if ((this._Ulica != value))
				{
					this.OnUlicaChanging(value);
					this.SendPropertyChanging();
					this._Ulica = value;
					this.SendPropertyChanged("Ulica");
					this.OnUlicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nr_bud", Storage="_Nr_bud", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Nr_bud
		{
			get
			{
				return this._Nr_bud;
			}
			set
			{
				if ((this._Nr_bud != value))
				{
					this.OnNr_budChanging(value);
					this.SendPropertyChanging();
					this._Nr_bud = value;
					this.SendPropertyChanged("Nr_bud");
					this.OnNr_budChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nr_miesz", Storage="_Nr_miesz", DbType="VarChar(5)")]
		public string Nr_miesz
		{
			get
			{
				return this._Nr_miesz;
			}
			set
			{
				if ((this._Nr_miesz != value))
				{
					this.OnNr_mieszChanging(value);
					this.SendPropertyChanging();
					this._Nr_miesz = value;
					this.SendPropertyChanged("Nr_miesz");
					this.OnNr_mieszChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kod_pocz", Storage="_Kod_pocz", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string Kod_pocz
		{
			get
			{
				return this._Kod_pocz;
			}
			set
			{
				if ((this._Kod_pocz != value))
				{
					this.OnKod_poczChanging(value);
					this.SendPropertyChanging();
					this._Kod_pocz = value;
					this.SendPropertyChanged("Kod_pocz");
					this.OnKod_poczChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="miasto", Storage="_Miasto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Miasto
		{
			get
			{
				return this._Miasto;
			}
			set
			{
				if ((this._Miasto != value))
				{
					this.OnMiastoChanging(value);
					this.SendPropertyChanging();
					this._Miasto = value;
					this.SendPropertyChanged("Miasto");
					this.OnMiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="plec", Storage="_Plec", DbType="Bit NOT NULL")]
		public bool Plec
		{
			get
			{
				return this._Plec;
			}
			set
			{
				if ((this._Plec != value))
				{
					this.OnPlecChanging(value);
					this.SendPropertyChanging();
					this._Plec = value;
					this.SendPropertyChanged("Plec");
					this.OnPlecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Wizyta_Pacjent", Storage="_Wizytas", ThisKey="Id_pac", OtherKey="Id_pac", DeleteRule="NO ACTION")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Pacjent = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Pacjent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rejestratorka")]
	public partial class Rejestratorka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id_rej;
		
		private string _Nazwisko;
		
		private string _Imie;
		
		private string _Login;
		
		private string _Haslo;
		
		private System.DateTime _Aktywny;
		
		private System.Nullable<System.DateTime> _Wygasa;
		
		private EntitySet<Wizyta> _Wizytas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_rejChanging(byte value);
    partial void OnId_rejChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnHasloChanging(string value);
    partial void OnHasloChanged();
    partial void OnAktywnyChanging(System.DateTime value);
    partial void OnAktywnyChanged();
    partial void OnWygasaChanging(System.Nullable<System.DateTime> value);
    partial void OnWygasaChanged();
    #endregion
		
		public Rejestratorka()
		{
			this._Wizytas = new EntitySet<Wizyta>(new Action<Wizyta>(this.attach_Wizytas), new Action<Wizyta>(this.detach_Wizytas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_rej", Storage="_Id_rej", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte Id_rej
		{
			get
			{
				return this._Id_rej;
			}
			set
			{
				if ((this._Id_rej != value))
				{
					this.OnId_rejChanging(value);
					this.SendPropertyChanging();
					this._Id_rej = value;
					this.SendPropertyChanged("Id_rej");
					this.OnId_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwisko", Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="imie", Storage="_Imie", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="login", Storage="_Login", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="haslo", Storage="_Haslo", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Haslo
		{
			get
			{
				return this._Haslo;
			}
			set
			{
				if ((this._Haslo != value))
				{
					this.OnHasloChanging(value);
					this.SendPropertyChanging();
					this._Haslo = value;
					this.SendPropertyChanged("Haslo");
					this.OnHasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="aktywny", Storage="_Aktywny", DbType="DateTime NOT NULL")]
		public System.DateTime Aktywny
		{
			get
			{
				return this._Aktywny;
			}
			set
			{
				if ((this._Aktywny != value))
				{
					this.OnAktywnyChanging(value);
					this.SendPropertyChanging();
					this._Aktywny = value;
					this.SendPropertyChanged("Aktywny");
					this.OnAktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="wygasa", Storage="_Wygasa", DbType="DateTime")]
		public System.Nullable<System.DateTime> Wygasa
		{
			get
			{
				return this._Wygasa;
			}
			set
			{
				if ((this._Wygasa != value))
				{
					this.OnWygasaChanging(value);
					this.SendPropertyChanging();
					this._Wygasa = value;
					this.SendPropertyChanged("Wygasa");
					this.OnWygasaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Wizyta_Rejestratorka", Storage="_Wizytas", ThisKey="Id_rej", OtherKey="Id_rej", DeleteRule="NO ACTION")]
		public EntitySet<Wizyta> Wizytas
		{
			get
			{
				return this._Wizytas;
			}
			set
			{
				this._Wizytas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Rejestratorka = this;
		}
		
		private void detach_Wizytas(Wizyta entity)
		{
			this.SendPropertyChanging();
			entity.Rejestratorka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sl_badan")]
	public partial class Sl_badan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Kod;
		
		private string _Nazwa;
		
		private string _Opis;
		
		private bool _Lab;
		
		private EntitySet<Badanie> _Badanies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKodChanging(short value);
    partial void OnKodChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnLabChanging(bool value);
    partial void OnLabChanged();
    #endregion
		
		public Sl_badan()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kod", Storage="_Kod", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Kod
		{
			get
			{
				return this._Kod;
			}
			set
			{
				if ((this._Kod != value))
				{
					this.OnKodChanging(value);
					this.SendPropertyChanging();
					this._Kod = value;
					this.SendPropertyChanged("Kod");
					this.OnKodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwa", Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="opis", Storage="_Opis", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lab", Storage="_Lab", DbType="Bit NOT NULL")]
		public bool Lab
		{
			get
			{
				return this._Lab;
			}
			set
			{
				if ((this._Lab != value))
				{
					this.OnLabChanging(value);
					this.SendPropertyChanging();
					this._Lab = value;
					this.SendPropertyChanged("Lab");
					this.OnLabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Badanie_Sl_badan", Storage="_Badanies", ThisKey="Kod", OtherKey="Kod", DeleteRule="SET NULL")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Sl_badan = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Sl_badan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sl_specjalizacji")]
	public partial class Sl_specjalizacji : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Kod_spec;
		
		private string _Nazwa;
		
		private EntitySet<Lekarz> _Lekarzs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKod_specChanging(short value);
    partial void OnKod_specChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
		
		public Sl_specjalizacji()
		{
			this._Lekarzs = new EntitySet<Lekarz>(new Action<Lekarz>(this.attach_Lekarzs), new Action<Lekarz>(this.detach_Lekarzs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="kod_spec", Storage="_Kod_spec", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Kod_spec
		{
			get
			{
				return this._Kod_spec;
			}
			set
			{
				if ((this._Kod_spec != value))
				{
					this.OnKod_specChanging(value);
					this.SendPropertyChanging();
					this._Kod_spec = value;
					this.SendPropertyChanged("Kod_spec");
					this.OnKod_specChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="nazwa", Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Lekarz_Sl_specjalizacji", Storage="_Lekarzs", ThisKey="Kod_spec", OtherKey="Kod_spec", DeleteRule="NO ACTION")]
		public EntitySet<Lekarz> Lekarzs
		{
			get
			{
				return this._Lekarzs;
			}
			set
			{
				this._Lekarzs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lekarzs(Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.Sl_specjalizacji = this;
		}
		
		private void detach_Lekarzs(Lekarz entity)
		{
			this.SendPropertyChanging();
			entity.Sl_specjalizacji = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wizyta")]
	public partial class Wizyta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_wiz;
		
		private System.DateTime _Data_rej;
		
		private System.Nullable<bool> _Stan;
		
		private System.Nullable<System.DateTime> _Data_wyk_bad;
		
		private string _Opis;
		
		private string _Diagnoza;
		
		private byte _Id_rej;
		
		private byte _Id_lek;
		
		private int _Id_pac;
		
		private EntitySet<Badanie> _Badanies;
		
		private EntityRef<Lekarz> _Lekarz;
		
		private EntityRef<Pacjent> _Pacjent;
		
		private EntityRef<Rejestratorka> _Rejestratorka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_wizChanging(int value);
    partial void OnId_wizChanged();
    partial void OnData_rejChanging(System.DateTime value);
    partial void OnData_rejChanged();
    partial void OnStanChanging(System.Nullable<bool> value);
    partial void OnStanChanged();
    partial void OnData_wyk_badChanging(System.Nullable<System.DateTime> value);
    partial void OnData_wyk_badChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnDiagnozaChanging(string value);
    partial void OnDiagnozaChanged();
    partial void OnId_rejChanging(byte value);
    partial void OnId_rejChanged();
    partial void OnId_lekChanging(byte value);
    partial void OnId_lekChanged();
    partial void OnId_pacChanging(int value);
    partial void OnId_pacChanged();
    #endregion
		
		public Wizyta()
		{
			this._Badanies = new EntitySet<Badanie>(new Action<Badanie>(this.attach_Badanies), new Action<Badanie>(this.detach_Badanies));
			this._Lekarz = default(EntityRef<Lekarz>);
			this._Pacjent = default(EntityRef<Pacjent>);
			this._Rejestratorka = default(EntityRef<Rejestratorka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_wiz", Storage="_Id_wiz", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_wiz
		{
			get
			{
				return this._Id_wiz;
			}
			set
			{
				if ((this._Id_wiz != value))
				{
					this.OnId_wizChanging(value);
					this.SendPropertyChanging();
					this._Id_wiz = value;
					this.SendPropertyChanged("Id_wiz");
					this.OnId_wizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="data_rej", Storage="_Data_rej", DbType="DateTime NOT NULL")]
		public System.DateTime Data_rej
		{
			get
			{
				return this._Data_rej;
			}
			set
			{
				if ((this._Data_rej != value))
				{
					this.OnData_rejChanging(value);
					this.SendPropertyChanging();
					this._Data_rej = value;
					this.SendPropertyChanged("Data_rej");
					this.OnData_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stan", Storage="_Stan", DbType="Bit")]
		public System.Nullable<bool> Stan
		{
			get
			{
				return this._Stan;
			}
			set
			{
				if ((this._Stan != value))
				{
					this.OnStanChanging(value);
					this.SendPropertyChanging();
					this._Stan = value;
					this.SendPropertyChanged("Stan");
					this.OnStanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="data_wyk_bad", Storage="_Data_wyk_bad", DbType="DateTime")]
		public System.Nullable<System.DateTime> Data_wyk_bad
		{
			get
			{
				return this._Data_wyk_bad;
			}
			set
			{
				if ((this._Data_wyk_bad != value))
				{
					this.OnData_wyk_badChanging(value);
					this.SendPropertyChanging();
					this._Data_wyk_bad = value;
					this.SendPropertyChanged("Data_wyk_bad");
					this.OnData_wyk_badChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="opis", Storage="_Opis", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="diagnoza", Storage="_Diagnoza", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Diagnoza
		{
			get
			{
				return this._Diagnoza;
			}
			set
			{
				if ((this._Diagnoza != value))
				{
					this.OnDiagnozaChanging(value);
					this.SendPropertyChanging();
					this._Diagnoza = value;
					this.SendPropertyChanged("Diagnoza");
					this.OnDiagnozaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_rej", Storage="_Id_rej", DbType="TinyInt NOT NULL")]
		public byte Id_rej
		{
			get
			{
				return this._Id_rej;
			}
			set
			{
				if ((this._Id_rej != value))
				{
					this.OnId_rejChanging(value);
					this.SendPropertyChanging();
					this._Id_rej = value;
					this.SendPropertyChanged("Id_rej");
					this.OnId_rejChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_lek", Storage="_Id_lek", DbType="TinyInt NOT NULL")]
		public byte Id_lek
		{
			get
			{
				return this._Id_lek;
			}
			set
			{
				if ((this._Id_lek != value))
				{
					this.OnId_lekChanging(value);
					this.SendPropertyChanging();
					this._Id_lek = value;
					this.SendPropertyChanged("Id_lek");
					this.OnId_lekChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_pac", Storage="_Id_pac", DbType="Int NOT NULL")]
		public int Id_pac
		{
			get
			{
				return this._Id_pac;
			}
			set
			{
				if ((this._Id_pac != value))
				{
					this.OnId_pacChanging(value);
					this.SendPropertyChanging();
					this._Id_pac = value;
					this.SendPropertyChanged("Id_pac");
					this.OnId_pacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Badanie_Wizyta", Storage="_Badanies", ThisKey="Id_wiz", OtherKey="Id_wiz", DeleteRule="NO ACTION")]
		public EntitySet<Badanie> Badanies
		{
			get
			{
				return this._Badanies;
			}
			set
			{
				this._Badanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Wizyta_Lekarz", Storage="_Lekarz", ThisKey="Id_lek", OtherKey="Id_lek", IsForeignKey=true)]
		public Lekarz Lekarz
		{
			get
			{
				return this._Lekarz.Entity;
			}
			set
			{
				Lekarz previousValue = this._Lekarz.Entity;
				if (((previousValue != value) 
							|| (this._Lekarz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lekarz.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Lekarz.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._Id_lek = value.Id_lek;
					}
					else
					{
						this._Id_lek = default(byte);
					}
					this.SendPropertyChanged("Lekarz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Wizyta_Pacjent", Storage="_Pacjent", ThisKey="Id_pac", OtherKey="Id_pac", IsForeignKey=true)]
		public Pacjent Pacjent
		{
			get
			{
				return this._Pacjent.Entity;
			}
			set
			{
				Pacjent previousValue = this._Pacjent.Entity;
				if (((previousValue != value) 
							|| (this._Pacjent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacjent.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Pacjent.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._Id_pac = value.Id_pac;
					}
					else
					{
						this._Id_pac = default(int);
					}
					this.SendPropertyChanged("Pacjent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Wizyta_Rejestratorka", Storage="_Rejestratorka", ThisKey="Id_rej", OtherKey="Id_rej", IsForeignKey=true)]
		public Rejestratorka Rejestratorka
		{
			get
			{
				return this._Rejestratorka.Entity;
			}
			set
			{
				Rejestratorka previousValue = this._Rejestratorka.Entity;
				if (((previousValue != value) 
							|| (this._Rejestratorka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rejestratorka.Entity = null;
						previousValue.Wizytas.Remove(this);
					}
					this._Rejestratorka.Entity = value;
					if ((value != null))
					{
						value.Wizytas.Add(this);
						this._Id_rej = value.Id_rej;
					}
					else
					{
						this._Id_rej = default(byte);
					}
					this.SendPropertyChanged("Rejestratorka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = this;
		}
		
		private void detach_Badanies(Badanie entity)
		{
			this.SendPropertyChanging();
			entity.Wizyta = null;
		}
	}
}
#pragma warning restore 1591
